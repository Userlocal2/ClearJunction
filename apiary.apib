FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Clear Junction Merchant API
## EU Collection Account
Clear Junction's EU Collection Account service enables FinTech companies to collect payments via 
Single Euro Payments Area (SEPA).

SEPA is a payment-integration initiative of the European Union 
for simplification of bank transfers denominated in euro. The aim of SEPA is to improve 
the efficiency of cross-border payments.

The specific and current aim of Clear Junction's service is to ease the facilitation of cash transfers
to Georgia and in future, to any country in the CIS.

## Interaction between Clear Junction and Merchant 

Transactions are made possible by a merchant, who is a Clear Junction client. 

![Booking](https://s3.amazonaws.com/74353748992479739/files/eu_collection_account.png)

As shown in the image above, there are three main steps with respect 
to the interaction between the merchant and Clear Junction:
<ol>
<li>The merchant requests a virtual IBAN from Clear Junction.
<li>Clear Junction notifies the merchant of the virtual IBAN.
<li>Clear Junction notifies the merchant that a payment has 
been made to the virtual IBAN.
</ol>

## Authentication

The system uses based on API key authorization process. 
The request header contains fields that initiate the authorization More process:

| Value | Description |
| ---|---| 
| apiVer           | The API version | 
| requestTime      | The time on the sender's server at the sending of the request      |
| apiKey           | The API user identifier (uuid)     |
| requestSignature | The signature for the request verifying. |

<b>Note</b>: 
- The `requestSignature` is calculated as follows:
`sha512(uppercase(header→apiKey).uppercase(sha512(apiPassword)).header→requestTime.uppercase(json→body→data))`
where `apiPassword` is a password known by the requesting side only. The system stores `sha512(apiPassword)`. 
That way, the system does not have access to the real password. 
- The system compares the current timestamp on the server and `header→requestTime` and rejects the request if the difference is greater than five minutes.


## IBAN [/ibanreservation]
### Allocation [POST]
The class represents reservation IBAN data. The reservation is performed 
for a new consumer. 

It is possible that the merchant who owns the consumer does not exist 
at the time of booking. The `merchantUuid` field lets you
pass a unique symbolic code for the merchant. 

All necessary data is encapsulated into a JSON message. 
A typical message contains a header and body, as described below.


#### Request Body

|Field|Type|Mandatory|Updatable|Description
|---|---|---|---|---|
|merchantUuid|String|yes|no|Code of the merchant for which the IBAN is being reserved.
|merchantCustomerIdentifier|String|yes|no|The ID which identifies the consumer in the merchant's system.
|firstName|String|yes|no|Consumer's first name in the merchant's system.
|lastName|String|yes|no|Consumer's last name in the merchant's system.
|localFirstName|String|yes|no|Consumer's local first name.
|localLastName|String|yes|no|Consumer's local last name.
|email|String|yes|no|Consumer's email address.
|document.type|String|yes|no|Type of document. Can be:<ul><li>ID card</li><li>Passport</li><li>Driver's license</li><li>Other</li></ul>
|document.number|String|yes|no|Series and number of identification document
|document.issuedCountryCode|String|yes|no|Country code according to ISO 3166 Alpha 3.
|document.issuedBy|String|yes|no|The authority that is issuing the document.
|document.issuedDate|String|yes|no|Date of issue.
|gender|String|yes|no|Consumer's gender. Can be:<ul><li>Male</li><li>Female</li><li>Other</li></ul>
|phoneNumber|String|yes|no|Consumer's birthdate.
|dateOfBirth|Date|yes|no|Consumer's birthdate.
|Consumer data|JSON|yes|no|Consumer data in JSON format
|Virtual IBAN|String|yes|no|Virtual IBAN number

#### Response Body
The response from Clear Junction is a JSON structure.
<ul>
<li>In case of HTTP Status Code 200, the structure contains the following:

- The consumer data that was delivered in the request.
- A virtual IBAN.

<li>In case of HTTP Status Code 400, the structure contains an error message.
</ul>
+ Request IBAN Consumer Reservation (application/json)
    + Body

            {
                "header": {
                    "apiVer": "0.6",
                    "requestTime": "2017-06-22T11:40:51.620Z",
                    "requestSignature": "34695d044dc52d340ee9d04b12367a12f2eb5650890cac5d6098765dd289dfe4fd9b05cb2099d11fb85fe5e0c0804a9a5880b45a4d57b2b0f90280b83ed29038",
                    "apiKey": "730ee406-817e-11e7-bb31-be2e44b06b34"
                },
                "body": {
                    "data": {
                        "consumer": {
                            "merchantUuid": "2e2ccab8-19ad-40c6-a8ac-411a23645404",
                            "merchantCustomerId": "c4b78t34qb678034qpn",
                            "firstName": "John",
                            "lastName": "Doe",
                            "localFirstName": "გივი",
                            "localLastName": "გელაშვილი",
                            "email": "tangezi.gelashvily@gmail.com",
                            "document": [{
                                "type": "passport|driver|idCard",
                                "number": "AE111111",
                                "issuedCountryCode": "USA",
                                "issuedBy": "Антовоский РВДГУУМВД г.НьюЙорк",
                                "issuedDate": "2017-06-22"
                            }],
                            "gender": "male:female:other",
                            "phoneNumber": "972541122334",
                            "dateOfBirth": "2017-02-22",
                            "address": "Some address",
                            "customInfo": {
                                "It's only for example": "JSON",
                                "incorporationDate": "22/12/2010",
                                "divisionType": "Delivery",
                                "divisionId": "10"
                            }
                        }
                    }
                }
            }

+ Response 200 (application/json)

        {
            "header": {
                "apiVer": "0.6",
                "responseTime": "2017-06-22T11:40:51.620Z"
            },
            "body":{
                "data": {
                    "consumer": {
                            "merchantUuid": "2e2ccab8-19ad-40c6-a8ac-411a23645404",
                            "merchantCustomerIderchant customer Id": "c4b78t34qb678034qpn",
                            "firstName": "John",
                            "lastName": "Doe",
                            "localFirstName": "გივი",
                            "localLastName": "გელაშვილი",
                            "email": "tangezi.gelashvily@gmail.com",
                            "document": [{
                                "type": "passport|driver|idCard",
                                "number": "AE111111",
                                "issuedCountryCode": "USA",
                                "issuedBy": "Антовоский РВДГУУМВД г.НьюЙорк",
                                "issuedDate": "2017-06-22"
                            }],
                            "gender": "male:female:other",
                            "phoneNumber": "972541122334",
                            "dateOfBirth": "2017-02-22",
                            "address": "Some address",
                            "customInfo": {
                                "It's only for example": "JSON",
                                "incorporationDate": "22/12/2010",
                                "divisionType": "Delivery",
                                "divisionId": "10"
                            }
                        },
                    "iban": "xxxxxxxxxxxxx"
                },
                "errors": null
            }
        }
        
+ Response 400 (application/json)

        {
            "header": {
                "apiVer": "0.6",
                "responseTime": "2017-06-22T11:40:51.620Z"
            },
            "body": {
                "data": null,
                "errors": [{
                    "error": {
                        "code": 10,
                        "message": "Validation error",
                        "details": "consumer.fullName is a required field but it is empty now"
                    }
                }]
            }
        }