FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Clear Junction Merchant API
## EU Collection Account
Clear Junction's EU Collection Account service enables FinTech companies to collect payments via 
Single Euro Payments Area (SEPA).

SEPA is a payment-integration initiative of the European Union 
for simplification of bank transfers denominated in euro. The aim of SEPA is to improve 
the efficiency of cross-border payments.

## Interaction between Clear Junction and Merchant 

Transactions are made possible by a merchant, who is a Clear Junction client. 

![Booking](https://s3.amazonaws.com/74353748992479739/files/eu_collection_account.png)

As shown in the image above, there are three main steps with respect 
to the interaction between the merchant and Clear Junction:
<ol>
<li>The merchant requests that a virtual IBAN be allocated it from Clear Junction.
<li>Clear Junction notifies the merchant of the virtual IBAN that has been allocated.
<li>In the event of a payment to the virtual IBAN, Clear Junction notifies the merchant that the funds can 
be paid to the client.
</ol>

## Lithuanian IBAN Format

An IBAN number consists of up to 34 alphanumeric characters. Clear Junction uses a 20-digit virtual IBAN in the following format:
|  |  |  |  | |  |  |  |  |  |  |  |  |  | |  |  | |  |  |
| ---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|
| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 |
| L | T | K | K | 3 | 9 | 5 | 0 | 0 | P | P | M | M | M | C | C | C | C | C | C |

where
| Digits | Code | Description |
| ---|---|---|
| 1, 2 | Country code | LT for Lithuania |
| 3, 4 | Check digits | Allows program control of the account number and ensures protection for situations where the account number is entered incorrectly. |
| 5-9 | Bank code | Five digits: bank (financial institution) code |
| 10-11 | Platform | Two digits: code of platform |
| 12-14 | Merchant | Three digits: code of merchant  |
| 15-20 | Unique code | Six digits: unique code. Should be generated as autoincrement. |


## Authentication

The system uses an authorization process that is based on an API key. 
The request header contains fields that initiate the authorization process:

| Value | Description |
| ---|---| 
| apiVer           | The API version | 
| requestTime      | The time on the sender's server at the sending of the request      |
| apiKey           | The API user identifier (uuid)     |
| requestSignature | The signature for the request verifying. |

<b>Notes</b>: 
- The `requestSignature` is calculated as follows:
`sha512(uppercase(header→apiKey).uppercase(sha512(apiPassword)).header→requestTime.uppercase(json→body→data))`
where `apiPassword` is a password known by the requesting side only. The system stores `sha512(apiPassword)`. 
That way, the system does not have access to the real password. 
- The system compares the current timestamp on the server and `header→requestTime` and rejects the request if the difference is greater than five minutes.

## Payment Notification
Notification is provided to the merchant about an incoming payment
after Clear Junction receives that payment from SEPA.

Notification takes the form of a message in JSON format. Here is an example:

```
{
    "header": {
        "apiVer": "0.6",
        "requestTime": "20170622T114051+00",
        "requestSignature": "xxxxxxxxxxxxxxxxxxxxxxxx (sha512)",
        "apiKey": "xxxxxxxxxxxxxxxx"
    },
    "body": {
        "requestType": "ibanPayinNotification",
        "data": {
            "paymentInstructionUuid": "uuid",
            "merchantCustomerId": "1923898",
            "paymentInstructionTimestamp": "20170622T114051+00",
            "payer": {
                "name": "Petr Ivanenko",
                "iban": "XXXXXXXXXX"
            },
            "payee": {
                "name": "Tangezi Gelashvily",
                "iban": "XXXXXXXXXX"
            },
            "currency": "EUR",
            "amount": "20000",
            "status": "receipted|pending|captured|declined",
            "messages": [{
                "category": "COMPLIANCE"|"COMMON",
                "type": "ERROR|WARNING|INFO",
                "code": 100|101|102...,
                "messageText": "The Payee <payeeName> failed the compliance check",
                "details": "The string contains some details"
            }]
        }
    }
}
```
The possible values of the `status` field are `captured` or `declined`.  
The `reason.message` field is a string which is defined as the 
result of the manual investigation process. 

Following is a description of the main values in the JSON structure:

| Value | Description |
| ---|---| 
| paymentInstructionUuid                 | Unique instruction ID |
| paymentInstructionTimestamp| Instruction creation time |
| payer|<table><tr><td>IBAN  <td> Account number of person who sent the funds </tr> <tr><td>Name <td>Name of person who sent the funds </tr></table> |
| payee|<table><tr><td>IBAN  <td> Account number of person to whom funds are sent </tr> <tr><td>Name <td>Name of person to whom funds are sent </tr></table> |
| status | Instruction status. Options are:<ul><li>received: the instruction was received</li><li>pending: the instruction is being processed</li><li>captured: the instruction succeeded</li><li>declined: the instruction was declined</li></ul>
| messages | List of messages relating to the structure. Each message has the following fields: <ul><li>category: Category. Options are: COMPLIANCE and GENERAL</li><li>type</li><li>code: a unique code for the issue to which the message is related.</li><li>messageText: text description of the issue</li><li>details: further details about the issue</ul>

## IBAN [/ibanreservation]
### Allocation [POST]
Represents reservation IBAN data. The reservation is performed 
for a new consumer. 

It is possible that the merchant who owns the consumer does not exist 
at the time of IBAN allocation. The `merchantUuid` field lets you
pass a unique symbolic code for the merchant. 

All necessary data is encapsulated into a JSON message. 
A typical message contains a header and body, as described below.


#### Request Body

The following table describes the request body fields:

|Field|Type|Mandatory|Updatable|Description
|---|---|---|---|---|
|merchantUuid|String|yes|no|Code of the merchant for which the IBAN is being reserved.
|merchantCustomerIdentifier|String|yes|no|The ID which identifies the consumer in the merchant's system.
|firstName|String|yes|no|Consumer's first name in the merchant's system.
|lastName|String|yes|no|Consumer's last name in the merchant's system.
|localFirstName|String|yes|no|Consumer's local first name.
|localLastName|String|yes|no|Consumer's local last name.
|email|String|yes|no|Consumer's email address.
|document.type|String|yes|no|Type of document. Options are:<ul><li>ID card</li><li>Passport</li><li>Driver's license</li><li>Other</li></ul>
|document.number|String|yes|no|Series and number of identification document
|document.issuedCountryCode|String|yes|no|Country code according to ISO 3166 Alpha 2.
|document.issuedBy|String|yes|no|The authority that is issuing the document.
|document.issuedDate|String|yes|no|Date of issue.
|gender|String|yes|no|Consumer's gender. Options are:<ul><li>Male</li><li>Female</li><li>Other</li></ul>
|phoneNumber|String|yes|no|Consumer's birthdate.
|dateOfBirth|Date|yes|no|Consumer's birthdate.
|Consumer data|JSON|yes|no|Consumer data in JSON format
|Virtual IBAN|String|yes|no|Virtual IBAN number


#### Response Body
The response from Clear Junction is a JSON structure.
<ul>
<li>In case of HTTP Status Code 200, the structure contains the following:

- The consumer data that was delivered in the request.
- A virtual IBAN.

<li>In case of HTTP Status Code 400, the structure contains an error message.
</ul>

The following table describes the response body fields:

|Field|Type|Mandatory|Updatable|Description
|---|---|---|---|---|
|merchantUuid|String|yes|no|Code of the merchant for which the IBAN is being reserved.
|merchantCustomerId|String|yes|no|The ID which identifies the consumer in the merchant's system.
|firstName|String|yes|no|Consumer's first name in the merchant's system.
|lastName|String|yes|no|Consumer's last name in the merchant's system.
|localFirstName|String|yes|no|Consumer's local first name.
|localLastName|String|yes|no|Consumer's local last name.
|email|String|yes|no|Consumer's email address.
|document.type|String|yes|no|Type of document. Options are:<ul><li>ID card</li><li>Passport</li><li>Driver's license</li><li>Other</li></ul>
|document.number|String|yes|no|Series and number of identification document
|document.issuedCountryCode|String|yes|no|Country code according to ISO 3166 Alpha 2.
|document.issuedBy|String|yes|no|The authority that is issuing the document.
|document.issuedDate|String|yes|no|Date of issue.
|gender|String|yes|no|Consumer's gender. Options are:<ul><li>Male</li><li>Female</li><li>Other</li></ul>
|phoneNumber|String|yes|no|Consumer's birthdate.
|dateOfBirth|Date|yes|no|Consumer's birthdate.
|Consumer data|JSON|yes|no|Consumer data in JSON format
|Virtual IBAN|String|yes|no|Virtual IBAN number

+ Request IBAN Consumer Reservation (application/json)
    + Body

            {
                "header": {
                    "apiVer": "0.6",
                    "requestTime": "2017-06-22T11:40:51.620Z",
                    "requestSignature": "34695d044dc52d340ee9d04b12367a12f2eb5650890cac5d6098765dd289dfe4fd9b05cb2099d11fb85fe5e0c0804a9a5880b45a4d57b2b0f90280b83ed29038",
                    "apiKey": "730ee406-817e-11e7-bb31-be2e44b06b34"
                },
                "body": {
                    "data": {
                        "consumer": {
                            "merchantUuid": "2e2ccab8-19ad-40c6-a8ac-411a23645404",
                            "merchantCustomerId": "c4b78t34qb678034qpn",
                            "firstName": "Tangezi",
                            "lastName": "Gelashvily",
                            "localFirstName": "თენგიზ",
                            "localLastName": "გელაშვილი",
                            "email": "tangezi.gelashvily@maildomain.com",
                            "document": [{
                                "type": "passport",
                                "number": "AE111111",
                                "issuedCountryCode": "GE",
                                "issuedBy": "Tbilisi",
                                "issuedDate": "2017-06-22"
                            }],
                            "gender": "male",
                            "phoneNumber": "972541122334",
                            "dateOfBirth": "2017-02-22",
                            "address": "Some address",
                            "customInfo": {
                                "It's only for example": "JSON",
                                "incorporationDate": "22/12/2010",
                                "divisionType": "Delivery",
                                "divisionId": "10"
                            }
                        }
                    }
                }
            }

+ Response 200 (application/json)

        {
            "header": {
                "apiVer": "0.6",
                "responseTime": "2017-06-22T11:40:51.620Z"
            },
            "body":{
                "data": {
                    "consumer": {
                            "merchantUuid": "2e2ccab8-19ad-40c6-a8ac-411a23645404",
                            "merchantCustomerId": "c4b78t34qb678034qpn",
                            "firstName": "Tangezi",
                            "lastName": "Gelashvily",
                            "localFirstName": "თენგიზ",
                            "localLastName": "გელაშვილი",
                            "email": "tangezi.gelashvily@maildomain.com",
                            "document": [{
                                "type": "passport",
                                "number": "AE111111",
                                "issuedCountryCode": "GE",
                                "issuedBy": "Tbilisi",
                                "issuedDate": "2017-06-22"
                            }],
                            "gender": "male",
                            "phoneNumber": "972541122334",
                            "dateOfBirth": "2017-02-22",
                            "address": "Some address",
                            "customInfo": {
                                "It's only for example": "JSON",
                                "incorporationDate": "22/12/2010",
                                "divisionType": "Delivery",
                                "divisionId": "10"
                            }
                        },
                    "iban": "xxxxxxxxxxxxx"
                },
                "errors": null
            }
        }
        
+ Response 400 (application/json)

        {
            "header": {
                "apiVer": "0.6",
                "responseTime": "2017-06-22T11:40:51.620Z"
            },
            "body": {
                "data": null,
                "errors": [{
                    "error": {
                        "code": 10,
                        "message": "Validation error",
                        "details": "consumer.fullName is a required field but it is empty now"
                    }
                }]
            }
        }